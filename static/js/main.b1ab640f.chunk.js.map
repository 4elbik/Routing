{"version":3,"sources":["fetchConfig.js","utilities/formatServerErrors.js","actions/index.js","reducers/index.js","routes/endpoints.js","hoc/AuthRedirectComponent.jsx","components/Preloader/Preloader.jsx","hoc/AuthWithTocken.jsx","components/Home/Home.jsx","components/Home/index.js","components/Login/Login.jsx","components/Login/index.js","components/Signup/Signup.jsx","components/Signup/index.js","components/App/App.jsx","components/App/index.js","serviceWorker.js","index.jsx"],"names":["api","axios","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","defaults","headers","common","Authorization","formatRegisterErrorsToFormikErrors","responseErrors","errors","response","data","Object","keys","forEach","key","toString","formatLoginErrorToStr","responseError","map","loginUserRequest","createAction","loginUserSuccess","loginUserFailure","logoutUser","registerUserRequest","registerUserSuccess","registerUserFailure","loginUserToken","dispatch","a","get","userLoginFetching","handleActions","actions","userRegisterFetching","user","_state","payload","isAuth","combineReducers","LOGIN_LINK","REGISTER_LINK","AuthRedirectComponent","NewComponent","connect","state","props","to","PreloaderWrapper","styled","div","Preloader","className","AuthWithTocken","Component","mapDispatchToProps","AuthWithTockenComponent","handleLoginAction","this","React","logout","Home","removeItem","UserWrapper","username","type","onClick","defaultProps","WithRedirectComponent","singin","post","errStr","Login","setItem","fieldErrorClassNames","field","touched","classNames","error","initialValues","email","password","onSubmit","values","InputWrapper","as","Input","name","placeholder","disabled","Password","ButtonsWrapper","htmlType","IfTockenExists","register","setErrors","newErrors","Signup","MainWrapper","App","path","exact","component","routesLinks","Boolean","window","location","hostname","match","store","createStore","reducers","compose","applyMiddleware","ReduxThunk","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.b1ab640f.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://conduit.productionready.io/api',\n});\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    api.defaults.headers.common.Authorization = `Token ${token}`;\n  }\n  return config;\n});\n\nexport default api;\n","export const formatRegisterErrorsToFormikErrors = (responseErrors) => {\n  const errors = { ...responseErrors.response.data.errors };\n  Object.keys(errors).forEach((key) => {\n    errors[key] = errors[key].toString();\n  });\n  return errors;\n};\n\nexport const formatLoginErrorToStr = (responseError) => {\n  return Object.keys(responseError.response.data.errors).map(\n    (key) => `${key}: ${responseError.response.data.errors[key][0]}`\n  );\n};\n","import { createAction } from 'redux-actions';\nimport api from '../fetchConfig';\nimport { formatLoginErrorToStr } from '../utilities/formatServerErrors';\n\nexport const loginUserRequest = createAction('USER_LOGIN_REQUEST');\nexport const loginUserSuccess = createAction('USER_LOGIN_SUCCESS');\nexport const loginUserFailure = createAction('USER_LOGIN_FAILURE');\n\nexport const logoutUser = createAction('USER_LOGOUT');\n\nexport const registerUserRequest = createAction('USER_REGISTER_REQUEST');\nexport const registerUserSuccess = createAction('USER_REGISTER_SUCCESS');\nexport const registerUserFailure = createAction('USER_REGISTER_FAILURE');\n\nexport const loginUser = (user) => async (dispatch) => {\n  dispatch(loginUserRequest());\n  try {\n    const response = await api.post('/users/login', { user });\n    dispatch(loginUserSuccess(response.data));\n  } catch (err) {\n    const errStr = formatLoginErrorToStr(err);\n    dispatch(loginUserFailure({ errors: errStr }));\n    throw err;\n  }\n};\n\nexport const loginUserToken = () => async (dispatch) => {\n  dispatch(loginUserRequest());\n  try {\n    const response = await api.get('/user');\n    dispatch(loginUserSuccess(response.data));\n  } catch (err) {\n    dispatch(loginUserFailure({ errors: err.response }));\n    throw err;\n  }\n};\n\nexport const registerUser = (user) => async (dispatch) => {\n  dispatch(registerUserRequest());\n  try {\n    await api.post('/users', { user });\n    dispatch(registerUserSuccess());\n  } catch (err) {\n    dispatch(registerUserFailure());\n    throw err;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { handleActions } from 'redux-actions';\nimport * as actions from '../actions';\n\nconst userLoginFetching = handleActions(\n  {\n    [actions.loginUserRequest]() {\n      return 'requested';\n    },\n    [actions.loginUserSuccess]() {\n      return 'finished';\n    },\n    [actions.loginUserFailure]() {\n      return 'failed';\n    },\n  },\n  'none'\n);\n\nconst userRegisterFetching = handleActions(\n  {\n    [actions.registerUserRequest]() {\n      return 'requested';\n    },\n    [actions.registerUserSuccess]() {\n      return 'finished';\n    },\n    [actions.registerUserFailure]() {\n      return 'failed';\n    },\n  },\n  'none'\n);\n\nconst user = handleActions(\n  {\n    [actions.loginUserSuccess](_state, { payload: { user: userData } }) {\n      return userData;\n    },\n    [actions.loginUserFailure](_state, { payload: { errors } }) {\n      return { errors };\n    },\n    [actions.logoutUser]() {\n      return {};\n    },\n  },\n  {}\n);\n\nconst isAuth = handleActions(\n  {\n    [actions.loginUserSuccess]() {\n      return true;\n    },\n    [actions.logoutUser]() {\n      return false;\n    },\n  },\n  false\n);\n\nexport default combineReducers({\n  userLoginFetching,\n  userRegisterFetching,\n  user,\n  isAuth,\n});\n","export const HOME_LINK = '/Routing';\nexport const LOGIN_LINK = `${HOME_LINK}/login`;\nexport const REGISTER_LINK = `${HOME_LINK}/singup`;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { LOGIN_LINK } from '../routes/endpoints';\n\nconst AuthRedirectComponent = (NewComponent) => {\n  const mapStateToProps = (state) => {\n    const props = {\n      isAuth: state.isAuth,\n    };\n\n    return props;\n  };\n\n  const RedirectComponent = (props) => {\n    const { isAuth } = props;\n    const token = localStorage.getItem('token');\n\n    if (!isAuth && !token) {\n      return <Redirect to={LOGIN_LINK} />;\n    }\n\n    return <NewComponent {...props} />;\n  };\n\n  RedirectComponent.propTypes = {\n    isAuth: PropTypes.bool.isRequired,\n  };\n\n  return connect(mapStateToProps)(RedirectComponent);\n};\n\nexport default AuthRedirectComponent;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Preloader = () => {\n  return (\n    <PreloaderWrapper>\n      <div className=\"backdrop\">\n        <div className=\"loader\">\n          <div className=\"dot\" />\n          <div className=\"dot\" />\n          <div className=\"dot\" />\n          <div className=\"dot\" />\n          <div className=\"dot\" />\n        </div>\n      </div>\n    </PreloaderWrapper>\n  );\n};\n\nconst PreloaderWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  margin: 0;\n  padding: 0;\n  position: absolute;\n\n  .backdrop {\n    display: -webkit-box;\n    display: flex;\n    -webkit-box-pack: center;\n    justify-content: center;\n    -webkit-box-align: center;\n    align-items: center;\n    height: 100%;\n    width: 100%;\n  }\n\n  .loader {\n    display: -webkit-box;\n    display: flex;\n    -webkit-box-align: center;\n    align-items: center;\n    -webkit-box-pack: center;\n    justify-content: center;\n  }\n\n  .dot {\n    background: white;\n    margin: 5px;\n    -webkit-animation-name: loader;\n    animation-name: loader;\n    -webkit-animation-duration: 1s;\n    animation-duration: 1s;\n    -webkit-animation-iteration-count: infinite;\n    animation-iteration-count: infinite;\n    -webkit-animation-direction: alternate;\n    animation-direction: alternate;\n  }\n\n  .dot:nth-child(1) {\n    -webkit-animation-delay: 0.2s;\n    animation-delay: 0.2s;\n  }\n  .dot:nth-child(2) {\n    -webkit-animation-delay: 0.4s;\n    animation-delay: 0.4s;\n  }\n  .dot:nth-child(3) {\n    -webkit-animation-delay: 0.6s;\n    animation-delay: 0.6s;\n  }\n  .dot:nth-child(4) {\n    -webkit-animation-delay: 0.8s;\n    animation-delay: 0.8s;\n  }\n  .dot:nth-child(5) {\n    -webkit-animation-delay: 1s;\n    animation-delay: 1s;\n  }\n\n  @-webkit-keyframes loader {\n    from {\n      width: 2px;\n      height: 2px;\n      border-radius: 1px;\n    }\n    to {\n      width: 20px;\n      height: 20px;\n      border-radius: 10px;\n    }\n  }\n\n  @keyframes loader {\n    from {\n      width: 2px;\n      height: 2px;\n      border-radius: 1px;\n    }\n    to {\n      width: 20px;\n      height: 20px;\n      border-radius: 10px;\n    }\n  }\n`;\n\nexport default Preloader;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport * as actions from '../actions';\nimport Preloader from '../components/Preloader/Preloader';\n\nconst AuthWithTocken = (Component) => {\n  const mapStateToProps = (state) => {\n    const props = {\n      isAuth: state.isAuth,\n      userLoginFetching: state.userLoginFetching,\n    };\n\n    return props;\n  };\n\n  const mapDispatchToProps = {\n    loginUserToken: actions.loginUserToken,\n  };\n\n  class AuthWithTockenComponent extends React.Component {\n    handleLoginAction = () => {\n      const { loginUserToken } = this.props;\n      loginUserToken();\n    };\n\n    render() {\n      const { isAuth, userLoginFetching } = this.props;\n      const token = localStorage.getItem('token');\n\n      if (!isAuth && token && userLoginFetching !== 'requested') {\n        this.handleLoginAction();\n      }\n      if (!isAuth && token && userLoginFetching !== 'finished') {\n        return <Preloader />;\n      }\n\n      return <Component {...this.props} />;\n    }\n  }\n\n  AuthWithTockenComponent.propTypes = {\n    userLoginFetching: PropTypes.string.isRequired,\n    isAuth: PropTypes.bool.isRequired,\n    loginUserToken: PropTypes.func.isRequired,\n  };\n\n  return connect(mapStateToProps, mapDispatchToProps)(AuthWithTockenComponent);\n};\n\nexport default AuthWithTocken;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Button } from 'antd';\nimport styled from 'styled-components';\nimport * as actions from '../../actions';\nimport AuthRedirectComponent from '../../hoc/AuthRedirectComponent';\nimport AuthWithTocken from '../../hoc/AuthWithTocken';\n\nconst mapStateToProps = (state) => {\n  const props = {\n    user: state.user,\n  };\n\n  return props;\n};\n\nconst mapDispatchToProps = {\n  logout: actions.logoutUser,\n};\n\nclass Home extends React.Component {\n  logout = () => {\n    const { logout } = this.props;\n    // Какие-то сомнения в использовании нативного JS. Правильно ли что это дело тут происходит?\n    // Суть в том, что при разлогировании нужно и из local storage убирать токен. И мне кажется эта логика\n    // должна быть в файле actions, но я как-то не смог допереть как это там можно сделать\n    localStorage.removeItem('token');\n    logout();\n  };\n\n  render() {\n    const { user } = this.props;\n\n    return (\n      <div className=\"content\">\n        <h1>Home page</h1>\n        <UserWrapper>\n          <span className=\"user-name\">{user.username}</span>\n          <Button type=\"link\" onClick={this.logout}>\n            Log out\n          </Button>\n        </UserWrapper>\n        <p>\n          Lorem ipsum, dolor sit amet consectetur adipisicing elit. Sint, aliquid velit repellendus\n          accusamus quasi consequuntur. Perspiciatis eos error natus rem laborum, reiciendis omnis,\n          maxime sapiente ducimus tempora molestias aut officia.\n        </p>\n      </div>\n    );\n  }\n}\n\nconst UserWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nHome.defaultProps = {\n  user: {},\n};\n\nHome.propTypes = {\n  user: PropTypes.instanceOf(Object),\n  logout: PropTypes.func.isRequired,\n};\n\nconst IfTockenExists = AuthWithTocken(Home);\nconst WithRedirectComponent = AuthRedirectComponent(IfTockenExists);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WithRedirectComponent);\n","import Home from './Home';\n\nexport default Home;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Formik, Form, Field } from 'formik';\nimport { Link, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Input, Button } from 'antd';\nimport styled from 'styled-components';\nimport classNames from 'classnames';\nimport * as actions from '../../actions';\nimport { HOME_LINK, REGISTER_LINK } from '../../routes/endpoints';\nimport AuthWithTocken from '../../hoc/AuthWithTocken';\nimport 'antd/dist/antd.css';\n\nconst mapStateToProps = (state) => {\n  const props = {\n    userLoginFetching: state.userLoginFetching,\n    user: state.user,\n    isAuth: state.isAuth,\n  };\n\n  return props;\n};\n\nconst mapDispatchToProps = {\n  singin: actions.loginUser,\n};\n\nconst Login = (props) => {\n  const { user, isAuth, userLoginFetching, singin } = props;\n\n  if (isAuth) {\n    localStorage.setItem('token', user.token);\n    return <Redirect to={HOME_LINK} />;\n  }\n\n  const fieldErrorClassNames = (field, errors, touched) => {\n    return classNames({ error: errors[field] && touched[field] });\n  };\n\n  return (\n    <div className=\"content\">\n      <h1>Autorization:</h1>\n      <Formik\n        initialValues={{\n          email: '',\n          password: '',\n        }}\n        onSubmit={(values) => {\n          singin(values);\n        }}\n      >\n        {({ errors, touched }) => (\n          <Form>\n            <InputWrapper>\n              <Field\n                as={Input}\n                className={fieldErrorClassNames('email', errors, touched)}\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Email\"\n                disabled={userLoginFetching === 'requested'}\n              />\n            </InputWrapper>\n            <InputWrapper>\n              <Field\n                as={Input.Password}\n                className={fieldErrorClassNames('password', errors, touched)}\n                name=\"password\"\n                placeholder=\"Input your password\"\n                disabled={userLoginFetching === 'requested'}\n              />\n            </InputWrapper>\n            <ButtonsWrapper>\n              <div>\n                <Button\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                  disabled={userLoginFetching === 'requested'}\n                >\n                  Sing In\n                </Button>\n                {user.errors && <span className=\"error\">{user.errors}</span>}\n              </div>\n              <Button type=\"link\">\n                <Link to={REGISTER_LINK}>Create a new user</Link>\n              </Button>\n            </ButtonsWrapper>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nconst InputWrapper = styled.div`\n  margin-bottom: 20px;\n`;\nconst ButtonsWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n\n  & .error {\n    margin-left: 20px;\n    color: tomato;\n  }\n`;\n\nLogin.defaultProps = {\n  user: {},\n};\n\nLogin.propTypes = {\n  user: PropTypes.instanceOf(Object),\n  userLoginFetching: PropTypes.string.isRequired,\n  singin: PropTypes.func.isRequired,\n  isAuth: PropTypes.bool.isRequired,\n};\n\nconst IfTockenExists = AuthWithTocken(Login);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IfTockenExists);\n","import Login from './Login';\n\nexport default Login;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Formik, Form, Field } from 'formik';\nimport { Link, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Button, Input } from 'antd';\nimport styled from 'styled-components';\nimport classNames from 'classnames';\nimport * as actions from '../../actions';\nimport { LOGIN_LINK } from '../../routes/endpoints';\nimport { formatRegisterErrorsToFormikErrors } from '../../utilities/formatServerErrors';\nimport 'antd/dist/antd.css';\nimport AuthWithTocken from '../../hoc/AuthWithTocken';\n\nconst mapStateToProps = (state) => {\n  const props = {\n    isAuth: state.isAuth,\n    userRegisterFetching: state.userRegisterFetching,\n  };\n\n  return props;\n};\n\nconst mapDispatchToProps = {\n  register: actions.registerUser,\n};\n\nconst Signup = (props) => {\n  const { isAuth, userRegisterFetching, register } = props;\n\n  if (isAuth || userRegisterFetching === 'finished') {\n    return <Redirect to={LOGIN_LINK} />;\n  }\n\n  const fieldErrorClassNames = (field, errors, touched) => {\n    return classNames({ error: errors[field] && touched[field] });\n  };\n\n  return (\n    <div className=\"content\">\n      <h1>Register a new user account:</h1>\n      <Formik\n        initialValues={{\n          username: '',\n          email: '',\n          password: '',\n        }}\n        onSubmit={async (values, { setErrors }) => {\n          try {\n            await register(values);\n          } catch (err) {\n            const newErrors = formatRegisterErrorsToFormikErrors(err);\n            setErrors(newErrors);\n          }\n        }}\n      >\n        {({ errors, touched }) => (\n          <Form>\n            <InputWrapper>\n              <Field\n                as={Input}\n                className={fieldErrorClassNames('username', errors, touched)}\n                name=\"username\"\n                placeholder=\"Username\"\n                disabled={userRegisterFetching === 'requested'}\n              />\n              {errors.username && touched.username && (\n                <span className=\"error-text\">{errors.username}</span>\n              )}\n            </InputWrapper>\n            <InputWrapper>\n              <Field\n                as={Input}\n                className={fieldErrorClassNames('email', errors, touched)}\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Email\"\n                disabled={userRegisterFetching === 'requested'}\n              />\n              {errors.email && touched.email && <span className=\"error-text\">{errors.email}</span>}\n            </InputWrapper>\n            <InputWrapper>\n              <Field\n                as={Input.Password}\n                className={fieldErrorClassNames('password', errors, touched)}\n                name=\"password\"\n                placeholder=\"Input your password\"\n                disabled={userRegisterFetching === 'requested'}\n              />\n              {errors.password && touched.password && (\n                <span className=\"error-text\">{errors.password}</span>\n              )}\n            </InputWrapper>\n            <ButtonsWrapper>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                disabled={userRegisterFetching === 'requested'}\n              >\n                Sign Up\n              </Button>\n              <Button type=\"link\">\n                <Link to={LOGIN_LINK}>Login</Link>\n              </Button>\n            </ButtonsWrapper>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nconst InputWrapper = styled.div`\n  margin-bottom: 20px;\n\n  & .error {\n    border-color: tomato;\n  }\n\n  & .error-text {\n    margin-left: 5px;\n    color: tomato;\n  }\n`;\nconst ButtonsWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n`;\n\nSignup.propTypes = {\n  isAuth: PropTypes.bool.isRequired,\n  userRegisterFetching: PropTypes.string.isRequired,\n  register: PropTypes.func.isRequired,\n};\n\nconst IfTockenExists = AuthWithTocken(Signup);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IfTockenExists);\n","import Signup from './Signup';\n\nexport default Signup;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Home from '../Home';\nimport Login from '../Login';\nimport Signup from '../Signup';\nimport * as routesLinks from '../../routes/endpoints';\n\nconst App = () => {\n  return (\n    <MainWrapper>\n      <Router>\n        <Switch>\n          <Route path={routesLinks.HOME_LINK} exact component={Home} />\n          <Route path={routesLinks.LOGIN_LINK} exact component={Login} />\n          <Route path={routesLinks.REGISTER_LINK} exact component={Signup} />\n        </Switch>\n      </Router>\n    </MainWrapper>\n  );\n};\n\nconst MainWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 50px 0;\n  height: 100vh;\n  background: rgb(2, 0, 36);\n  background: linear-gradient(\n    25deg,\n    rgba(2, 0, 36, 1) 0%,\n    rgba(9, 9, 121, 1) 20%,\n    rgba(0, 212, 255, 1) 100%\n  );\n\n  & .content {\n    width: 40%;\n\n    padding: 20px;\n\n    background-color: #fff;\n    box-shadow: 0px 2px 15px rgba(0, 0, 0, 0.5);\n    border: 2px solid lightblue;\n    border-radius: 5px;\n\n    & h1 {\n      margin: 0;\n      margin-bottom: 20px;\n      font-size: 24px;\n      font-weight: 400;\n    }\n\n    & p {\n      margin: 0;\n    }\n  }\n`;\n\nexport default App;\n","import App from './App';\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport ReduxThunk from 'redux-thunk';\nimport reducers from './reducers';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\n/* eslint-disable */\nconst store = createStore(\n  reducers,\n  compose(\n    applyMiddleware(ReduxThunk),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n  ),\n);\n/* eslint-enable */\n\nReactDOM.render(\n  <Provider store={store}>\n    {/* <React.StrictMode> */}\n    <App />\n    {/* </React.StrictMode> */}\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}