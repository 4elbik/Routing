{"version":3,"sources":["fetchConfig.js","utilities/formatServerErrors.js","actions/index.js","actions/articles.js","reducers/articles.js","reducers/index.js","components/PrivateRoute/index.js","components/PrivateRoute/PrivateRoute.jsx","components/Preloader/Preloader.jsx","hoc/AuthWithTocken.jsx","components/Home/Home.jsx","components/Home/index.js","routes/endpoints.js","components/Login/Login.jsx","components/Login/index.js","components/Signup/Signup.jsx","components/Signup/index.js","components/App/App.jsx","components/App/index.js","serviceWorker.js","index.jsx"],"names":["api","axios","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","common","Authorization","formatRegisterErrorsToFormikErrors","responseErrors","errors","response","data","Object","keys","forEach","key","toString","formatLoginErrorToStr","responseError","map","loginUserRequest","createAction","loginUserSuccess","loginUserFailure","logoutUser","registerUserRequest","registerUserSuccess","registerUserFailure","loginUserToken","dispatch","a","get","setItem","user","removeItem","articlesRequest","articlesSuccess","articlesFailure","favoriteArticleRequest","favoriteArticleSuccess","favoriteArticleFailure","unFavoriteArticleRequest","unFavoriteArticleSuccess","unFavoriteArticleFailure","activeTagName","articlesFetching","handleActions","actions","favoriteArticleFetching","unFavoriteArticleFetching","articles","_state","payload","articlesObj","state","slug","article","newState","newArticles","el","articlesCount","userLoginFetching","userRegisterFetching","isAuth","combineReducers","actionsArticle","PrivateRoute","children","condition","redirectTo","rest","render","to","PreloaderWrapper","styled","div","Preloader","className","AuthWithTocken","Component","mapDispatchToProps","AuthWithTockenComponent","handleLoginAction","props","this","React","connect","logout","Home","UserWrapper","username","type","onClick","defaultProps","IfTockenExists","LOGIN_LINK","REGISTER_LINK","singin","post","errStr","Login","fieldErrorClassNames","field","touched","classNames","error","initialValues","email","password","onSubmit","values","InputWrapper","as","Input","name","placeholder","disabled","Password","ButtonsWrapper","htmlType","register","setErrors","newErrors","Signup","MainWrapper","App","path","routesLinks","exact","Boolean","window","location","hostname","match","store","createStore","reducers","compose","applyMiddleware","ReduxThunk","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.ea0aab0b.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://conduit.productionready.io/api',\n});\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.common.Authorization = `Token ${token}`;\n  }\n  return config;\n});\n\nexport default api;\n","export const formatRegisterErrorsToFormikErrors = (responseErrors) => {\n  const errors = { ...responseErrors.response.data.errors };\n  Object.keys(errors).forEach((key) => {\n    errors[key] = `${key} ${errors[key].toString()}`;\n  });\n  return errors;\n};\n\nexport const formatLoginErrorToStr = (responseError) => {\n  return (\n    responseError.response &&\n    Object.keys(responseError.response.data.errors).map(\n      (key) => `${key}: ${responseError.response.data.errors[key][0]}`\n    )\n  );\n};\n","import { createAction } from 'redux-actions';\nimport api from '../fetchConfig';\nimport { formatLoginErrorToStr } from '../utilities/formatServerErrors';\n\nexport const loginUserRequest = createAction('USER_LOGIN_REQUEST');\nexport const loginUserSuccess = createAction('USER_LOGIN_SUCCESS');\nexport const loginUserFailure = createAction('USER_LOGIN_FAILURE');\n\nexport const logoutUser = createAction('USER_LOGOUT');\n\nexport const registerUserRequest = createAction('USER_REGISTER_REQUEST');\nexport const registerUserSuccess = createAction('USER_REGISTER_SUCCESS');\nexport const registerUserFailure = createAction('USER_REGISTER_FAILURE');\n\nexport const loginUser = (user) => async (dispatch) => {\n  dispatch(loginUserRequest());\n  try {\n    const response = await api.post('/users/login', { user });\n    localStorage.setItem('token', response.data.user.token);\n    dispatch(loginUserSuccess(response.data));\n  } catch (err) {\n    const errStr = formatLoginErrorToStr(err);\n    dispatch(loginUserFailure({ errors: errStr }));\n    throw err;\n  }\n};\n\nexport const loginUserToken = () => async (dispatch) => {\n  dispatch(loginUserRequest());\n  try {\n    const response = await api.get('/user');\n    localStorage.setItem('token', response.data.user.token);\n    dispatch(loginUserSuccess(response.data));\n  } catch (err) {\n    localStorage.removeItem('token');\n    dispatch(logoutUser());\n    dispatch(loginUserFailure({ errors: 'Please log in again' }));\n    throw err;\n  }\n};\n\nexport const registerUser = (user) => async (dispatch) => {\n  dispatch(registerUserRequest());\n  try {\n    await api.post('/users', { user });\n    dispatch(registerUserSuccess());\n  } catch (err) {\n    dispatch(registerUserFailure());\n    throw err;\n  }\n};\n","import { createAction } from 'redux-actions';\nimport api from '../fetchConfig';\n\nexport const articlesRequest = createAction('GET_ARTICLES_REQUEST');\nexport const articlesSuccess = createAction('GET_ARTICLES_SUCCESS');\nexport const articlesFailure = createAction('GET_ARTICLES_FAILURE');\n\n// export const oneArticleRequest = createAction('GET_ONE_ARTICLE_REQUEST');\n// export const oneArticleSuccess = createAction('GET_ONE_ARTICLE_SUCCESS');\n// export const oneArticleFailure = createAction('GET_ONE_ARTICLE_FAILURE');\n\nexport const favoriteArticleRequest = createAction('ADD_LIKE_REQUEST');\nexport const favoriteArticleSuccess = createAction('ADD_LIKE_SUCCESS');\nexport const favoriteArticleFailure = createAction('ADD_LIKE_FAILURE');\n\nexport const unFavoriteArticleRequest = createAction('REMOVE_LIKE_REQUEST');\nexport const unFavoriteArticleSuccess = createAction('REMOVE_LIKE_SUCCESS');\nexport const unFavoriteArticleFailure = createAction('REMOVE_LIKE_FAILURE');\n\nexport const activeTagName = createAction('CHANGE_ACTIVE_TAG_NAME');\n\nexport const getArticles = (tagName) => async (dispatch) => {\n  dispatch(articlesRequest());\n  try {\n    let endPoint = '/articles?limit=500&';\n    if (tagName) {\n      endPoint += `tag=${tagName}`;\n    }\n    // const response = await api.get('/articles?limit=500&offset=0');\n    const response = await api.get(endPoint);\n    dispatch(articlesSuccess({ articlesObj: response.data }));\n  } catch (err) {\n    dispatch(articlesFailure());\n    throw err;\n  }\n};\n\nexport const favoriteArticle = (slug) => async (dispatch) => {\n  dispatch(favoriteArticleRequest());\n  try {\n    const response = await api.post(`/articles/${slug}/favorite`);\n    dispatch(favoriteArticleSuccess({ slug, article: response.data.article }));\n  } catch (err) {\n    dispatch(favoriteArticleFailure());\n    throw err;\n  }\n};\n\nexport const unFavoriteArticle = (slug) => async (dispatch) => {\n  dispatch(unFavoriteArticleRequest());\n  try {\n    const response = await api.delete(`/articles/${slug}/favorite`);\n    dispatch(unFavoriteArticleSuccess({ slug, article: response.data.article }));\n  } catch (err) {\n    dispatch(unFavoriteArticleFailure());\n    throw err;\n  }\n};\n","import { handleActions } from 'redux-actions';\nimport * as actions from '../actions/articles';\n\nexport const articlesFetching = handleActions(\n  {\n    [actions.articlesRequest]() {\n      return 'requested';\n    },\n    [actions.articlesSuccess]() {\n      return 'finished';\n    },\n    [actions.articlesFailure]() {\n      return 'failed';\n    },\n  },\n  'none'\n);\n\nexport const favoriteArticleFetching = handleActions(\n  {\n    [actions.favoriteArticleRequest]() {\n      return 'requested';\n    },\n    [actions.favoriteArticleSuccess]() {\n      return 'finished';\n    },\n    [actions.favoriteArticleFailure]() {\n      return 'failed';\n    },\n  },\n  'none'\n);\n\nexport const unFavoriteArticleFetching = handleActions(\n  {\n    [actions.unFavoriteArticleRequest]() {\n      return 'requested';\n    },\n    [actions.unFavoriteArticleSuccess]() {\n      return 'finished';\n    },\n    [actions.unFavoriteArticleFailure]() {\n      return 'failed';\n    },\n  },\n  'none'\n);\n\nexport const articles = handleActions(\n  {\n    [actions.articlesSuccess](_state, { payload: { articlesObj } }) {\n      return articlesObj;\n    },\n    [actions.favoriteArticleSuccess](state, { payload: { slug, article } }) {\n      const newState = { ...state };\n      const newArticles = newState.articles.map((el) => {\n        if (el.slug === slug) {\n          return article;\n        }\n        return el;\n      });\n      newState.articles = newArticles;\n      return newState;\n    },\n    [actions.unFavoriteArticleSuccess](state, { payload: { slug, article } }) {\n      const newState = { ...state };\n      const newArticles = newState.articles.map((el) => {\n        if (el.slug === slug) {\n          return article;\n        }\n        return el;\n      });\n      newState.articles = newArticles;\n      return newState;\n    },\n  },\n  {\n    articles: [],\n    articlesCount: 0,\n  }\n);\n\nexport const activeTagName = handleActions(\n  {\n    [actions.activeTagName](_state, { payload: tagName }) {\n      return tagName;\n    },\n  },\n  ''\n);\n","import { combineReducers } from 'redux';\nimport { handleActions } from 'redux-actions';\nimport * as actions from '../actions';\nimport * as actionsArticle from './articles';\n\nconst userLoginFetching = handleActions(\n  {\n    [actions.loginUserRequest]() {\n      return 'requested';\n    },\n    [actions.loginUserSuccess]() {\n      return 'finished';\n    },\n    [actions.loginUserFailure]() {\n      return 'failed';\n    },\n  },\n  'none'\n);\n\nconst userRegisterFetching = handleActions(\n  {\n    [actions.registerUserRequest]() {\n      return 'requested';\n    },\n    [actions.registerUserSuccess]() {\n      return 'finished';\n    },\n    [actions.registerUserFailure]() {\n      return 'failed';\n    },\n  },\n  'none'\n);\n\nconst user = handleActions(\n  {\n    [actions.loginUserSuccess](_state, { payload: { user: userData } }) {\n      return userData;\n    },\n    [actions.loginUserFailure](_state, { payload: { errors } }) {\n      return { errors };\n    },\n    [actions.logoutUser]() {\n      return {};\n    },\n  },\n  {}\n);\n\nconst isAuth = handleActions(\n  {\n    [actions.loginUserSuccess]() {\n      return true;\n    },\n    [actions.logoutUser]() {\n      return false;\n    },\n  },\n  false\n);\n\nexport default combineReducers({\n  userLoginFetching,\n  userRegisterFetching,\n  user,\n  isAuth,\n  articlesFetching: actionsArticle.articlesFetching,\n  articles: actionsArticle.articles,\n  favoriteArticleFetching: actionsArticle.favoriteArticleFetching,\n  unFavoriteArticleFetching: actionsArticle.unFavoriteArticleFetching,\n  activeTagName: actionsArticle.activeTagName,\n});\n","import PrivateRoute from './PrivateRoute';\n\nexport default PrivateRoute;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst PrivateRoute = ({ children, condition, redirectTo, ...rest }) => (\n  <Route {...rest} render={() => (condition ? children : <Redirect to={redirectTo} />)} />\n);\n\nPrivateRoute.propTypes = {\n  children: PropTypes.element.isRequired,\n  condition: PropTypes.bool.isRequired,\n  redirectTo: PropTypes.string.isRequired,\n};\n\nexport default PrivateRoute;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Preloader = () => {\n  return (\n    <PreloaderWrapper>\n      <div className=\"backdrop\">\n        <div className=\"loader\">\n          <div className=\"dot\" />\n          <div className=\"dot\" />\n          <div className=\"dot\" />\n          <div className=\"dot\" />\n          <div className=\"dot\" />\n        </div>\n      </div>\n    </PreloaderWrapper>\n  );\n};\n\nconst PreloaderWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  margin: 0;\n  padding: 0;\n  position: absolute;\n\n  .backdrop {\n    display: -webkit-box;\n    display: flex;\n    -webkit-box-pack: center;\n    justify-content: center;\n    -webkit-box-align: center;\n    align-items: center;\n    height: 100%;\n    width: 100%;\n  }\n\n  .loader {\n    display: -webkit-box;\n    display: flex;\n    -webkit-box-align: center;\n    align-items: center;\n    -webkit-box-pack: center;\n    justify-content: center;\n  }\n\n  .dot {\n    background: white;\n    margin: 5px;\n    -webkit-animation-name: loader;\n    animation-name: loader;\n    -webkit-animation-duration: 1s;\n    animation-duration: 1s;\n    -webkit-animation-iteration-count: infinite;\n    animation-iteration-count: infinite;\n    -webkit-animation-direction: alternate;\n    animation-direction: alternate;\n  }\n\n  .dot:nth-child(1) {\n    -webkit-animation-delay: 0.2s;\n    animation-delay: 0.2s;\n  }\n  .dot:nth-child(2) {\n    -webkit-animation-delay: 0.4s;\n    animation-delay: 0.4s;\n  }\n  .dot:nth-child(3) {\n    -webkit-animation-delay: 0.6s;\n    animation-delay: 0.6s;\n  }\n  .dot:nth-child(4) {\n    -webkit-animation-delay: 0.8s;\n    animation-delay: 0.8s;\n  }\n  .dot:nth-child(5) {\n    -webkit-animation-delay: 1s;\n    animation-delay: 1s;\n  }\n\n  @-webkit-keyframes loader {\n    from {\n      width: 2px;\n      height: 2px;\n      border-radius: 1px;\n    }\n    to {\n      width: 20px;\n      height: 20px;\n      border-radius: 10px;\n    }\n  }\n\n  @keyframes loader {\n    from {\n      width: 2px;\n      height: 2px;\n      border-radius: 1px;\n    }\n    to {\n      width: 20px;\n      height: 20px;\n      border-radius: 10px;\n    }\n  }\n`;\n\nexport default Preloader;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport * as actions from '../actions';\nimport Preloader from '../components/Preloader/Preloader';\n\nconst AuthWithTocken = (Component) => {\n  const mapStateToProps = (state) => {\n    const props = {\n      isAuth: state.isAuth,\n      userLoginFetching: state.userLoginFetching,\n    };\n\n    return props;\n  };\n\n  const mapDispatchToProps = {\n    loginUserToken: actions.loginUserToken,\n  };\n\n  class AuthWithTockenComponent extends React.Component {\n    handleLoginAction = () => {\n      const { loginUserToken } = this.props;\n      loginUserToken();\n    };\n\n    render() {\n      const { isAuth, userLoginFetching } = this.props;\n      const token = localStorage.getItem('token');\n\n      if (!isAuth && token && userLoginFetching !== 'requested') {\n        this.handleLoginAction();\n      }\n      if (!isAuth && token && userLoginFetching !== 'finished') {\n        return <Preloader />;\n      }\n\n      return <Component {...this.props} />;\n    }\n  }\n\n  AuthWithTockenComponent.propTypes = {\n    userLoginFetching: PropTypes.string.isRequired,\n    isAuth: PropTypes.bool.isRequired,\n    loginUserToken: PropTypes.func.isRequired,\n  };\n\n  return connect(mapStateToProps, mapDispatchToProps)(AuthWithTockenComponent);\n};\n\nexport default AuthWithTocken;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n// import { Link } from 'react-router-dom';\n// import formatDistanceToNow from 'date-fns/formatDistanceToNow';\nimport { Button, Divider } from 'antd';\nimport styled from 'styled-components';\nimport * as actions from '../../actions';\n// import * as actionsArticles from '../../actions/articles';\nimport AuthWithTocken from '../../hoc/AuthWithTocken';\n// import { ARTICLE_LINK } from '../../routes/endpoints';\n\nconst mapStateToProps = (state) => {\n  const props = {\n    user: state.user,\n    // articlesObj: state.articles,\n    // favoriteArticleFetching: state.favoriteArticleFetching,\n    // unFavoriteArticleFetching: state.unFavoriteArticleFetching,\n  };\n\n  return props;\n};\n\nconst mapDispatchToProps = {\n  logout: actions.logoutUser,\n  // getArticles: actionsArticles.getArticles,\n  // favoriteArticle: actionsArticles.favoriteArticle,\n  // unFavoriteArticle: actionsArticles.unFavoriteArticle,\n  // changeActiveTagName: actionsArticles.activeTagName,\n};\n\nclass Home extends React.Component {\n  // componentDidMount() {\n  //   const { getArticles } = this.props;\n  //   getArticles();\n  // }\n\n  logout = () => {\n    const { logout } = this.props;\n    localStorage.removeItem('token');\n    logout();\n  };\n\n  // handleLike = (slug, favorited) => (evt) => {\n  //   evt.preventDefault();\n\n  //   const {\n  //     favoriteArticle,\n  //     favoriteArticleFetching,\n  //     unFavoriteArticle,\n  //     unFavoriteArticleFetching,\n  //   } = this.props;\n\n  //   if (\n  //     favorited &&\n  //     favoriteArticleFetching !== 'requested' &&\n  //     unFavoriteArticleFetching !== 'requested'\n  //   ) {\n  //     return unFavoriteArticle(slug);\n  //   }\n\n  //   if (favoriteArticleFetching !== 'requested' && unFavoriteArticleFetching !== 'requested') {\n  //     return favoriteArticle(slug);\n  //   }\n  // };\n\n  // handleTagClick = (tagName) => (evt) => {\n  //   evt.preventDefault();\n  //   const { getArticles, changeActiveTagName } = this.props;\n  //   changeActiveTagName(tagName);\n  //   getArticles(tagName);\n  // }\n\n  // renderArticles() {\n  //   const { articlesObj } = this.props;\n\n  //   if (articlesObj.articlesCount === 0) return null;\n\n  //   return articlesObj.articles.map((article) => {\n  //     const articleTags = article.tagList.map((tagName) => {\n  //       return (\n  //         <div className=\"article-tag-item\" onClick={this.handleTagClick(tagName)}>\n  //           #{tagName}\n  //         </div>\n  //       );\n  //     });\n\n  //     return (\n  //       <ArticleWrapper key={article.slug}>\n  //         <Link to={`${ARTICLE_LINK}/${article.slug}`}>\n  //           <div className=\"header\">{article.title}</div>\n  //           <div className=\"article-info\">\n  //             <div>\n  //               Created\n  //               <time>\n  //                 {' '}\n  //                 {formatDistanceToNow(new Date(article.createdAt), {\n  //                   includeSeconds: true,\n  //                   addSuffix: true,\n  //                 })}{' '}\n  //               </time>\n  //             </div>\n  //             <span>{article.author.username}</span>\n  //           </div>\n\n  //           { articleTags.length !== 0 ? (\n  //               <div className=\"article-tags\" style={{ background: 'tomato' }}>\n  //                 Tags:\n  //                 { articleTags }\n  //               </div>\n  //             ) : null }\n\n  //           <div\n  //             className=\"like-button-wrapper\"\n  //             onClick={this.handleLike(article.slug, article.favorited)}\n  //           >\n  //             <div className={article.favorited ? 'like-button-icon active' : 'like-button-icon'} />\n  //             <div className=\"like-button-count\">{article.favoritesCount}</div>\n  //           </div>\n  //         </Link>\n  //       </ArticleWrapper>\n  //     );\n  //   });\n  // }\n\n  render() {\n    const { user } = this.props;\n\n    return (\n      <div className=\"content\">\n        <h1>Home page</h1>\n        <UserWrapper>\n          <span className=\"user-name\">{user.username}</span>\n          <Button type=\"link\" onClick={this.logout}>\n            Log out\n          </Button>\n        </UserWrapper>\n        <p>\n          Lorem ipsum, dolor sit amet consectetur adipisicing elit. Sint, aliquid velit repellendus\n          accusamus quasi consequuntur. Perspiciatis eos error natus rem laborum, reiciendis omnis,\n          maxime sapiente ducimus tempora molestias aut officia.\n        </p>\n        <Divider />\n        {/* <div className=\"articles\">{this.renderArticles()}</div> */}\n      </div>\n    );\n  }\n}\n\nconst UserWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\n// const ArticleWrapper = styled.div`\n//   margin-bottom: 20px;\n//   background-color: #fff;\n\n//   &:last-child {\n//     margin-bottom: 0;\n//   }\n\n//   & a {\n//     color: inherit;\n//   }\n\n//   & .like-button-wrapper {\n//     display: flex;\n//     align-items: center;\n\n//     &:hover .like-button-icon {\n//       opacity: 1;\n//     }\n//   }\n\n//   & .like-button-icon {\n//     flex: 0 0 auto;\n//     width: 24px;\n//     height: 24px;\n//     background: no-repeat 50% / contain;\n//     opacity: 0.7;\n//     transition: opacity 100ms ease-in-out;\n//     background-image: url(data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%2024%2024%22%3E%3Ctitle%3Elike_outline_24%3C%2Ftitle%3E%3Cpath%20d%3D%22M0%2C0H24V24H0Z%22%20fill%3D%22none%22%2F%3E%3Cpath%20d%3D%22M17%2C2.9A6.43%2C6.43%2C0%2C0%2C1%2C23.4%2C9.33c0%2C3.57-1.43%2C5.36-7.45%2C10l-2.78%2C2.16a1.9%2C1.9%2C0%2C0%2C1-2.33%2C0L8.05%2C19.37C2%2C14.69.6%2C12.9.6%2C9.33A6.43%2C6.43%2C0%2C0%2C1%2C7%2C2.9a6.46%2C6.46%2C0%2C0%2C1%2C5%2C2.54A6.46%2C6.46%2C0%2C0%2C1%2C17%2C2.9ZM7%2C4.7A4.63%2C4.63%2C0%2C0%2C0%2C2.4%2C9.33c0%2C2.82%2C1.15%2C4.26%2C6.76%2C8.63l2.78%2C2.16a.1.1%2C0%2C0%2C0%2C.12%2C0L14.84%2C18c5.61-4.36%2C6.76-5.8%2C6.76-8.63A4.63%2C4.63%2C0%2C0%2C0%2C17%2C4.7c-1.56%2C0-3%2C.88-4.23%2C2.73L12%2C8.5l-.74-1.07C10%2C5.58%2C8.58%2C4.7%2C7%2C4.7Z%22%20fill%3D%22%23828a99%22%2F%3E%3C%2Fsvg%3E);\n\n//     &.active {\n//       opacity: 1;\n//       background-image: url(data:image/svg+xml;charset=utf-8,%3Csvg%20viewBox%3D%220%200%2024%2024%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20d%3D%22m0%200h24v24h-24z%22%20fill%3D%22none%22%2F%3E%3Cpath%20d%3D%22m17%202.9a6.43%206.43%200%200%201%206.4%206.43c0%203.57-1.43%205.36-7.45%2010l-2.78%202.16a1.9%201.9%200%200%201%20-2.33%200l-2.79-2.12c-6.05-4.68-7.45-6.47-7.45-10.04a6.43%206.43%200%200%201%206.4-6.43%205.7%205.7%200%200%201%205%203.1%205.7%205.7%200%200%201%205-3.1z%22%20fill%3D%22%23ff3347%22%2F%3E%3C%2Fsvg%3E);\n//     }\n//   }\n\n//   & .like-button-count {\n//     margin-left: 6px;\n//   }\n// `;\n\nHome.defaultProps = {\n  user: {},\n};\n\nHome.propTypes = {\n  user: PropTypes.instanceOf(Object),\n  logout: PropTypes.func.isRequired,\n  // articlesObj: PropTypes.instanceOf(Object).isRequired,\n  // getArticles: PropTypes.func.isRequired,\n};\n\nconst IfTockenExists = AuthWithTocken(Home);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IfTockenExists);\n","import Home from './Home';\n\nexport default Home;\n","export const HOME_LINK = '/Routing';\nexport const LOGIN_LINK = `${HOME_LINK}/login`;\nexport const REGISTER_LINK = `${HOME_LINK}/singup`;\nexport const ARTICLE_LINK = `${HOME_LINK}/articles`;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Formik, Form, Field } from 'formik';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Input, Button } from 'antd';\nimport styled from 'styled-components';\nimport classNames from 'classnames';\nimport * as actions from '../../actions';\nimport { REGISTER_LINK } from '../../routes/endpoints';\nimport AuthWithTocken from '../../hoc/AuthWithTocken';\nimport 'antd/dist/antd.css';\n\nconst mapStateToProps = (state) => {\n  const props = {\n    userLoginFetching: state.userLoginFetching,\n    user: state.user,\n  };\n\n  return props;\n};\n\nconst mapDispatchToProps = {\n  singin: actions.loginUser,\n};\n\nconst Login = (props) => {\n  const { user, userLoginFetching, singin } = props;\n\n  const fieldErrorClassNames = (field, errors, touched) => {\n    return classNames({ error: errors[field] && touched[field] });\n  };\n\n  return (\n    <div className=\"content\">\n      <h1>Autorization:</h1>\n      <Formik\n        initialValues={{\n          email: '',\n          password: '',\n        }}\n        onSubmit={(values) => {\n          singin(values);\n        }}\n      >\n        {({ errors, touched }) => (\n          <Form>\n            <InputWrapper>\n              <Field\n                as={Input}\n                className={fieldErrorClassNames('email', errors, touched)}\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Email\"\n                disabled={userLoginFetching === 'requested'}\n              />\n            </InputWrapper>\n            <InputWrapper>\n              <Field\n                as={Input.Password}\n                className={fieldErrorClassNames('password', errors, touched)}\n                name=\"password\"\n                placeholder=\"Input your password\"\n                disabled={userLoginFetching === 'requested'}\n              />\n            </InputWrapper>\n            <ButtonsWrapper>\n              <div>\n                <Button\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                  disabled={userLoginFetching === 'requested'}\n                >\n                  Sing In\n                </Button>\n                {user.errors && <span className=\"error\">{user.errors}</span>}\n              </div>\n              <Button type=\"link\">\n                <Link to={REGISTER_LINK}>Create a new user</Link>\n              </Button>\n            </ButtonsWrapper>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nconst InputWrapper = styled.div`\n  margin-bottom: 20px;\n`;\nconst ButtonsWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n\n  & .error {\n    margin-left: 20px;\n    color: tomato;\n  }\n`;\n\nLogin.defaultProps = {\n  user: {},\n};\n\nLogin.propTypes = {\n  user: PropTypes.instanceOf(Object),\n  userLoginFetching: PropTypes.string.isRequired,\n  singin: PropTypes.func.isRequired,\n};\n\nconst IfTockenExists = AuthWithTocken(Login);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IfTockenExists);\n","import Login from './Login';\n\nexport default Login;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Formik, Form, Field } from 'formik';\nimport { Link, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Button, Input } from 'antd';\nimport styled from 'styled-components';\nimport classNames from 'classnames';\nimport * as actions from '../../actions';\nimport { LOGIN_LINK } from '../../routes/endpoints';\nimport { formatRegisterErrorsToFormikErrors } from '../../utilities/formatServerErrors';\nimport 'antd/dist/antd.css';\nimport AuthWithTocken from '../../hoc/AuthWithTocken';\n\nconst mapStateToProps = (state) => {\n  const props = {\n    userRegisterFetching: state.userRegisterFetching,\n  };\n\n  return props;\n};\n\nconst mapDispatchToProps = {\n  register: actions.registerUser,\n};\n\nconst Signup = (props) => {\n  const { userRegisterFetching, register } = props;\n\n  if (userRegisterFetching === 'finished') {\n    return <Redirect to={LOGIN_LINK} />;\n  }\n\n  const fieldErrorClassNames = (field, errors, touched) => {\n    return classNames({ error: errors[field] && touched[field] });\n  };\n\n  return (\n    <div className=\"content\">\n      <h1>Register a new user account:</h1>\n      <Formik\n        initialValues={{\n          username: '',\n          email: '',\n          password: '',\n        }}\n        onSubmit={async (values, { setErrors }) => {\n          try {\n            await register(values);\n          } catch (err) {\n            const newErrors = formatRegisterErrorsToFormikErrors(err);\n            setErrors(newErrors);\n          }\n        }}\n      >\n        {({ errors, touched }) => (\n          <Form>\n            <InputWrapper>\n              <Field\n                as={Input}\n                className={fieldErrorClassNames('username', errors, touched)}\n                name=\"username\"\n                placeholder=\"Username\"\n                disabled={userRegisterFetching === 'requested'}\n              />\n              {errors.username && touched.username && (\n                <span className=\"error-text\">{errors.username}</span>\n              )}\n            </InputWrapper>\n            <InputWrapper>\n              <Field\n                as={Input}\n                className={fieldErrorClassNames('email', errors, touched)}\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Email\"\n                disabled={userRegisterFetching === 'requested'}\n              />\n              {errors.email && touched.email && <span className=\"error-text\">{errors.email}</span>}\n            </InputWrapper>\n            <InputWrapper>\n              <Field\n                as={Input.Password}\n                className={fieldErrorClassNames('password', errors, touched)}\n                name=\"password\"\n                placeholder=\"Input your password\"\n                disabled={userRegisterFetching === 'requested'}\n              />\n              {errors.password && touched.password && (\n                <span className=\"error-text\">{errors.password}</span>\n              )}\n            </InputWrapper>\n            <ButtonsWrapper>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                disabled={userRegisterFetching === 'requested'}\n              >\n                Sign Up\n              </Button>\n              <Button type=\"link\">\n                <Link to={LOGIN_LINK}>Login</Link>\n              </Button>\n            </ButtonsWrapper>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nconst InputWrapper = styled.div`\n  margin-bottom: 20px;\n\n  & .error {\n    border-color: tomato;\n  }\n\n  & .error-text {\n    margin-left: 5px;\n    color: tomato;\n  }\n`;\nconst ButtonsWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n`;\n\nSignup.propTypes = {\n  userRegisterFetching: PropTypes.string.isRequired,\n  register: PropTypes.func.isRequired,\n};\n\nconst IfTockenExists = AuthWithTocken(Signup);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IfTockenExists);\n","import Signup from './Signup';\n\nexport default Signup;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport PrivateRoute from '../PrivateRoute';\nimport Home from '../Home';\nimport Login from '../Login';\nimport Signup from '../Signup';\n// import Article from '../Article';\nimport * as routesLinks from '../../routes/endpoints';\n\nconst mapStateToProps = (state) => {\n  const props = {\n    isAuth: state.isAuth,\n  };\n\n  return props;\n};\n\nconst App = (props) => {\n  const { isAuth } = props;\n\n  return (\n    <MainWrapper>\n      <Router>\n        <Switch>\n          <PrivateRoute\n            condition={isAuth}\n            path={routesLinks.HOME_LINK}\n            redirectTo={routesLinks.LOGIN_LINK}\n            exact\n          >\n            <Home />\n          </PrivateRoute>\n          <PrivateRoute\n            condition={!isAuth}\n            path={routesLinks.LOGIN_LINK}\n            redirectTo={routesLinks.HOME_LINK}\n            exact\n          >\n            <Login />\n          </PrivateRoute>\n          <PrivateRoute\n            condition={!isAuth}\n            path={routesLinks.REGISTER_LINK}\n            redirectTo={routesLinks.HOME_LINK}\n            exact\n          >\n            <Signup />\n          </PrivateRoute>\n          {/* <Route path={`${routesLinks.ARTICLE_LINK}/:slug`} component={Article} /> */}\n        </Switch>\n      </Router>\n    </MainWrapper>\n  );\n};\n\nconst MainWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 50px 0;\n  min-height: 100vh;\n  background: rgb(2, 0, 36);\n  background: linear-gradient(\n    25deg,\n    rgba(2, 0, 36, 1) 0%,\n    rgba(9, 9, 121, 1) 20%,\n    rgba(0, 212, 255, 1) 100%\n  );\n\n  & .content {\n    width: 40%;\n\n    padding: 20px;\n\n    background-color: #fff;\n    box-shadow: 0px 2px 15px rgba(0, 0, 0, 0.5);\n    border: 2px solid lightblue;\n    border-radius: 5px;\n\n    & h1 {\n      margin: 0;\n      margin-bottom: 20px;\n      font-size: 24px;\n      font-weight: 400;\n    }\n\n    & p {\n      margin: 0;\n    }\n  }\n`;\n\nApp.propTypes = {\n  isAuth: PropTypes.bool.isRequired,\n};\n\nexport default connect(mapStateToProps)(App);\n","import App from './App';\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport ReduxThunk from 'redux-thunk';\nimport reducers from './reducers';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\n/* eslint-disable */\nconst store = createStore(\n  reducers,\n  compose(\n    applyMiddleware(ReduxThunk),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n  ),\n);\n/* eslint-enable */\n\nReactDOM.render(\n  <Provider store={store}>\n    {/* <React.StrictMode> */}\n    <App />\n    {/* </React.StrictMode> */}\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}